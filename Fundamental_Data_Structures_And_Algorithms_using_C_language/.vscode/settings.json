{
    "ltex.disabledRules": [
        "AGREEMENT_SENT_START"
    ],
    "ltex.ignoreRuleInSentence": [
        {
            "rule": "MORFOLOGIK_RULE_EN_US",
            "sentence": "^\\QThis value is used to initialize pnumber in the secong statement.\\E$"
        },
        {
            "rule": "BEEN_PART_AGREEMENT",
            "sentence": "^\\QDon't be mislead by the name “arithmetic”, itself just means adding or subtracting to a pointer.\\E$"
        },
        {
            "rule": "LARGE_NUMBER_OF",
            "sentence": "^\\QMemory thus consists of a large number of bits that are arranged in to groups of eight called bytes and each byte has a unique address.\\E$"
        },
        {
            "rule": "SENTENCE_FRAGMENT",
            "sentence": "^\\QBefore anything lets understand the general polynomial.\\E$"
        },
        {
            "rule": "PUNCTUATION_PARAGRAPH_END",
            "sentence": "^\\QNo equivalent tail recursion is possible Implement the solution using iteration You are using iteration You can leave it as is, or implement it using tail recursion When to use recursion or iteration\\E$"
        },
        {
            "rule": "ENGLISH_WORD_REPEAT_RULE",
            "sentence": "^\\QYou are using tail recursion Recursion is better If you are using non-tail recursion Find an alternative recursion that allows you to implement tail recursion.\\E$"
        },
        {
            "rule": "ENGLISH_WORD_REPEAT_RULE",
            "sentence": "^\\QThe solution requires a stack Use recursion instead of iteration You are using tail recursion Recursion is better If you are using non-tail recursion Find an alternative recursion that allows you to implement tail recursion.\\E$"
        },
        {
            "rule": "SENTENCE_FRAGMENT",
            "sentence": "^\\QWhenever we traverse a binary tree we must do it recursively.\\E$"
        }
    ]
}