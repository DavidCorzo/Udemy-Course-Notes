\BOOKMARK [0][-]{chapter.1}{Introduction}{}% 1
\BOOKMARK [1][-]{section.1.1}{Why learn C++?}{chapter.1}% 2
\BOOKMARK [1][-]{section.1.2}{Modern C++ and the C++ standard}{chapter.1}% 3
\BOOKMARK [2][-]{subsection.1.2.1}{Modern C++ and C++ Standard}{section.1.2}% 4
\BOOKMARK [1][-]{section.1.3}{How does it all work?}{chapter.1}% 5
\BOOKMARK [2][-]{subsection.1.3.1}{The C++ build process}{section.1.3}% 6
\BOOKMARK [2][-]{subsection.1.3.2}{Integrated Development Environments \(IDEs\)}{section.1.3}% 7
\BOOKMARK [0][-]{chapter.2}{Installation and setup}{}% 8
\BOOKMARK [1][-]{section.2.1}{Installing C++ Compiler for windows}{chapter.2}% 9
\BOOKMARK [1][-]{section.2.2}{VSCode Project Setting Up}{chapter.2}% 10
\BOOKMARK [0][-]{chapter.3}{Curriculum Overview}{}% 11
\BOOKMARK [1][-]{section.3.1}{Curriculum overview}{chapter.3}% 12
\BOOKMARK [0][-]{chapter.4}{Getting Started}{}% 13
\BOOKMARK [1][-]{section.4.1}{Writting our first program}{chapter.4}% 14
\BOOKMARK [1][-]{section.4.2}{Building our first program}{chapter.4}% 15
\BOOKMARK [1][-]{section.4.3}{What are compiler errors?}{chapter.4}% 16
\BOOKMARK [2][-]{subsection.4.3.1}{Examples of errors}{section.4.3}% 17
\BOOKMARK [1][-]{section.4.4}{What are compiler warnings?}{chapter.4}% 18
\BOOKMARK [1][-]{section.4.5}{Linked errors}{chapter.4}% 19
\BOOKMARK [2][-]{subsection.4.5.1}{Example}{section.4.5}% 20
\BOOKMARK [1][-]{section.4.6}{Runtime Errors}{chapter.4}% 21
\BOOKMARK [1][-]{section.4.7}{What are logic errors?}{chapter.4}% 22
\BOOKMARK [1][-]{section.4.8}{Section challenge solution}{chapter.4}% 23
\BOOKMARK [0][-]{chapter.5}{Structure of a C++ program}{}% 24
\BOOKMARK [1][-]{section.5.1}{Overview of structure of a C++ program}{chapter.5}% 25
\BOOKMARK [1][-]{section.5.2}{\043include Preprocessor directive}{chapter.5}% 26
\BOOKMARK [1][-]{section.5.3}{Comments in C++}{chapter.5}% 27
\BOOKMARK [1][-]{section.5.4}{The main\(\) function}{chapter.5}% 28
\BOOKMARK [1][-]{section.5.5}{Namespaces}{chapter.5}% 29
\BOOKMARK [1][-]{section.5.6}{Basic input and output }{chapter.5}% 30
\BOOKMARK [2][-]{subsection.5.6.1}{cpp<< with cppcout}{section.5.6}% 31
\BOOKMARK [2][-]{subsection.5.6.2}{cpp>> with cppcin}{section.5.6}% 32
\BOOKMARK [0][-]{chapter.6}{Variables and constants}{}% 33
\BOOKMARK [1][-]{section.6.1}{What is a variable?}{chapter.6}% 34
\BOOKMARK [1][-]{section.6.2}{Declaring and initializing variables}{chapter.6}% 35
\BOOKMARK [2][-]{subsection.6.2.1}{Naming rules and conventions}{section.6.2}% 36
\BOOKMARK [2][-]{subsection.6.2.2}{Declaring and initializing}{section.6.2}% 37
\BOOKMARK [2][-]{subsection.6.2.3}{Example}{section.6.2}% 38
\BOOKMARK [1][-]{section.6.3}{Global variables}{chapter.6}% 39
\BOOKMARK [1][-]{section.6.4}{C++ Built-in Primitive Types}{chapter.6}% 40
\BOOKMARK [2][-]{subsection.6.4.1}{Type sizes}{section.6.4}% 41
\BOOKMARK [2][-]{subsection.6.4.2}{Character types}{section.6.4}% 42
\BOOKMARK [2][-]{subsection.6.4.3}{Integer data types}{section.6.4}% 43
\BOOKMARK [2][-]{subsection.6.4.4}{Floating point type}{section.6.4}% 44
\BOOKMARK [2][-]{subsection.6.4.5}{Boolean type}{section.6.4}% 45
\BOOKMARK [2][-]{subsection.6.4.6}{Buffer overflows}{section.6.4}% 46
\BOOKMARK [1][-]{section.6.5}{What is the size of a variable?}{chapter.6}% 47
\BOOKMARK [2][-]{subsection.6.5.1}{Examples}{section.6.5}% 48
\BOOKMARK [1][-]{section.6.6}{What is a constant?}{chapter.6}% 49
\BOOKMARK [2][-]{subsection.6.6.1}{Literal constants}{section.6.6}% 50
\BOOKMARK [2][-]{subsection.6.6.2}{Defined constants}{section.6.6}% 51
\BOOKMARK [0][-]{chapter.7}{Arrays and vectors}{}% 52
\BOOKMARK [1][-]{section.7.1}{Arrays and vectors}{chapter.7}% 53
\BOOKMARK [1][-]{section.7.2}{What is an array?}{chapter.7}% 54
\BOOKMARK [2][-]{subsection.7.2.1}{Characteristics}{section.7.2}% 55
\BOOKMARK [1][-]{section.7.3}{Declaring and initializing arrays}{chapter.7}% 56
\BOOKMARK [2][-]{subsection.7.3.1}{Declaring arrays}{section.7.3}% 57
\BOOKMARK [2][-]{subsection.7.3.2}{Initializing arrays}{section.7.3}% 58
\BOOKMARK [1][-]{section.7.4}{Accessing and modifying array elements}{chapter.7}% 59
\BOOKMARK [2][-]{subsection.7.4.1}{How do arrays work?}{section.7.4}% 60
\BOOKMARK [2][-]{subsection.7.4.2}{Examples}{section.7.4}% 61
\BOOKMARK [1][-]{section.7.5}{Multidimentional arrays}{chapter.7}% 62
\BOOKMARK [1][-]{section.7.6}{Declaring and initializing vectors}{chapter.7}% 63
\BOOKMARK [2][-]{subsection.7.6.1}{Vectors}{section.7.6}% 64
\BOOKMARK [2][-]{subsection.7.6.2}{Declaring vectors}{section.7.6}% 65
\BOOKMARK [2][-]{subsection.7.6.3}{Initializing vectors}{section.7.6}% 66
\BOOKMARK [2][-]{subsection.7.6.4}{Vector caracteristics}{section.7.6}% 67
\BOOKMARK [1][-]{section.7.7}{Accessing and modifying vector elements}{chapter.7}% 68
\BOOKMARK [2][-]{subsection.7.7.1}{Vectors changing in size dynamically}{section.7.7}% 69
\BOOKMARK [2][-]{subsection.7.7.2}{Out of bounds errors}{section.7.7}% 70
\BOOKMARK [0][-]{chapter.8}{Statements and operators}{}% 71
\BOOKMARK [1][-]{section.8.1}{Expressions and statements}{chapter.8}% 72
\BOOKMARK [1][-]{section.8.2}{Using operators}{chapter.8}% 73
\BOOKMARK [1][-]{section.8.3}{The assignment operator}{chapter.8}% 74
\BOOKMARK [2][-]{subsection.8.3.1}{Example}{section.8.3}% 75
\BOOKMARK [1][-]{section.8.4}{Arithmetic operators}{chapter.8}% 76
\BOOKMARK [2][-]{subsection.8.4.1}{Examples}{section.8.4}% 77
\BOOKMARK [1][-]{section.8.5}{Increment and decrement operators}{chapter.8}% 78
\BOOKMARK [2][-]{subsection.8.5.1}{Example}{section.8.5}% 79
\BOOKMARK [1][-]{section.8.6}{Mixed expressions and conversions}{chapter.8}% 80
\BOOKMARK [2][-]{subsection.8.6.1}{Conversions}{section.8.6}% 81
\BOOKMARK [2][-]{subsection.8.6.2}{Example type coercion}{section.8.6}% 82
\BOOKMARK [2][-]{subsection.8.6.3}{Examples explicit type casting}{section.8.6}% 83
\BOOKMARK [1][-]{section.8.7}{Testing for equality}{chapter.8}% 84
\BOOKMARK [2][-]{subsection.8.7.1}{Example}{section.8.7}% 85
\BOOKMARK [1][-]{section.8.8}{Relational operators}{chapter.8}% 86
\BOOKMARK [2][-]{subsection.8.8.1}{Example}{section.8.8}% 87
\BOOKMARK [1][-]{section.8.9}{Logical operators}{chapter.8}% 88
\BOOKMARK [2][-]{subsection.8.9.1}{Precedence}{section.8.9}% 89
\BOOKMARK [2][-]{subsection.8.9.2}{Examples}{section.8.9}% 90
\BOOKMARK [2][-]{subsection.8.9.3}{Short-Circuit evaluation}{section.8.9}% 91
\BOOKMARK [2][-]{subsection.8.9.4}{Example}{section.8.9}% 92
\BOOKMARK [1][-]{section.8.10}{Compound assignment operators}{chapter.8}% 93
\BOOKMARK [1][-]{section.8.11}{Operator Precedence}{chapter.8}% 94
\BOOKMARK [2][-]{subsection.8.11.1}{Example}{section.8.11}% 95
\BOOKMARK [0][-]{chapter.9}{Controlling program flow}{}% 96
\BOOKMARK [1][-]{section.9.1}{Section overview}{chapter.9}% 97
\BOOKMARK [2][-]{subsection.9.1.1}{Selection: Decision}{section.9.1}% 98
\BOOKMARK [2][-]{subsection.9.1.2}{Iteration: Looping}{section.9.1}% 99
\BOOKMARK [1][-]{section.9.2}{If statement}{chapter.9}% 100
\BOOKMARK [2][-]{subsection.9.2.1}{Examples of single if statements}{section.9.2}% 101
\BOOKMARK [2][-]{subsection.9.2.2}{Block if statements}{section.9.2}% 102
\BOOKMARK [2][-]{subsection.9.2.3}{Example of block ifs}{section.9.2}% 103
\BOOKMARK [1][-]{section.9.3}{If else statement}{chapter.9}% 104
\BOOKMARK [2][-]{subsection.9.3.1}{Example of single if else statements}{section.9.3}% 105
\BOOKMARK [2][-]{subsection.9.3.2}{If else block}{section.9.3}% 106
\BOOKMARK [2][-]{subsection.9.3.3}{If else if construct}{section.9.3}% 107
\BOOKMARK [2][-]{subsection.9.3.4}{Example}{section.9.3}% 108
\BOOKMARK [1][-]{section.9.4}{Nested if statement}{chapter.9}% 109
\BOOKMARK [2][-]{subsection.9.4.1}{Example}{section.9.4}% 110
\BOOKMARK [1][-]{section.9.5}{Switch-case statement}{chapter.9}% 111
\BOOKMARK [2][-]{subsection.9.5.1}{Example}{section.9.5}% 112
\BOOKMARK [2][-]{subsection.9.5.2}{Review}{section.9.5}% 113
\BOOKMARK [2][-]{subsection.9.5.3}{Example}{section.9.5}% 114
\BOOKMARK [1][-]{section.9.6}{Conditional operator}{chapter.9}% 115
\BOOKMARK [2][-]{subsection.9.6.1}{Example}{section.9.6}% 116
\BOOKMARK [1][-]{section.9.7}{Looping}{chapter.9}% 117
\BOOKMARK [2][-]{subsection.9.7.1}{Use cases of looping}{section.9.7}% 118
\BOOKMARK [2][-]{subsection.9.7.2}{C++ looping constructs}{section.9.7}% 119
\BOOKMARK [1][-]{section.9.8}{cppfor loop}{chapter.9}% 120
\BOOKMARK [2][-]{subsection.9.8.1}{Examples}{section.9.8}% 121
\BOOKMARK [2][-]{subsection.9.8.2}{Other details}{section.9.8}% 122
\BOOKMARK [2][-]{subsection.9.8.3}{Examples}{section.9.8}% 123
\BOOKMARK [1][-]{section.9.9}{Range based for loop}{chapter.9}% 124
\BOOKMARK [2][-]{subsection.9.9.1}{Examples}{section.9.9}% 125
\BOOKMARK [1][-]{section.9.10}{While}{chapter.9}% 126
\BOOKMARK [2][-]{subsection.9.10.1}{Example}{section.9.10}% 127
\BOOKMARK [1][-]{section.9.11}{do-while loop}{chapter.9}% 128
\BOOKMARK [2][-]{subsection.9.11.1}{Examples}{section.9.11}% 129
\BOOKMARK [1][-]{section.9.12}{cppcontinue and cppbreak}{chapter.9}% 130
\BOOKMARK [2][-]{subsection.9.12.1}{Example}{section.9.12}% 131
\BOOKMARK [1][-]{section.9.13}{Infinite loops}{chapter.9}% 132
\BOOKMARK [2][-]{subsection.9.13.1}{Example}{section.9.13}% 133
\BOOKMARK [1][-]{section.9.14}{Nested loops}{chapter.9}% 134
\BOOKMARK [2][-]{subsection.9.14.1}{Examples}{section.9.14}% 135
\BOOKMARK [0][-]{chapter.10}{Characters and strings}{}% 136
\BOOKMARK [1][-]{section.10.1}{Character functions}{chapter.10}% 137
\BOOKMARK [1][-]{section.10.2}{C-Style strings}{chapter.10}% 138
\BOOKMARK [2][-]{subsection.10.2.1}{Examples}{section.10.2}% 139
\BOOKMARK [1][-]{section.10.3}{Working with C-Style strings examples}{chapter.10}% 140
\BOOKMARK [1][-]{section.10.4}{C++ strings}{chapter.10}% 141
\BOOKMARK [0][-]{chapter.11}{Functions}{}% 142
\BOOKMARK [1][-]{section.11.1}{What is a function?}{chapter.11}% 143
\BOOKMARK [2][-]{subsection.11.1.1}{Example}{section.11.1}% 144
\BOOKMARK [1][-]{section.11.2}{Function definition}{chapter.11}% 145
\BOOKMARK [2][-]{subsection.11.2.1}{Example}{section.11.2}% 146
\BOOKMARK [1][-]{section.11.3}{Function prototypes}{chapter.11}% 147
\BOOKMARK [1][-]{section.11.4}{Function parameters and the return statement}{chapter.11}% 148
\BOOKMARK [2][-]{subsection.11.4.1}{Function parameters}{section.11.4}% 149
\BOOKMARK [2][-]{subsection.11.4.2}{Function return statement}{section.11.4}% 150
\BOOKMARK [1][-]{section.11.5}{Default arguments}{chapter.11}% 151
\BOOKMARK [2][-]{subsection.11.5.1}{Example}{section.11.5}% 152
\BOOKMARK [1][-]{section.11.6}{Overloading functions}{chapter.11}% 153
\BOOKMARK [2][-]{subsection.11.6.1}{Example}{section.11.6}% 154
\BOOKMARK [1][-]{section.11.7}{Passing arrays to functions}{chapter.11}% 155
\BOOKMARK [1][-]{section.11.8}{Pass by reference}{chapter.11}% 156
\BOOKMARK [1][-]{section.11.9}{Scope rules}{chapter.11}% 157
\BOOKMARK [1][-]{section.11.10}{How do function calls work?}{chapter.11}% 158
\BOOKMARK [1][-]{section.11.11}{Inline functions}{chapter.11}% 159
\BOOKMARK [1][-]{section.11.12}{Recursive functions}{chapter.11}% 160
\BOOKMARK [0][-]{chapter.12}{Pointers and references}{}% 161
\BOOKMARK [1][-]{section.12.1}{What is a pointer?}{chapter.12}% 162
\BOOKMARK [2][-]{subsection.12.1.1}{Why use pointers?}{section.12.1}% 163
\BOOKMARK [1][-]{section.12.2}{Declaring pointer variables}{chapter.12}% 164
\BOOKMARK [1][-]{section.12.3}{Accessing the pointer address and storing address in a pointer}{chapter.12}% 165
\BOOKMARK [2][-]{subsection.12.3.1}{sizeof a pointer variable}{section.12.3}% 166
\BOOKMARK [2][-]{subsection.12.3.2}{Storing an address in a pointer variable?}{section.12.3}% 167
\BOOKMARK [2][-]{subsection.12.3.3}{\046 the address of operator}{section.12.3}% 168
\BOOKMARK [1][-]{section.12.4}{Dereferencing the pointer}{chapter.12}% 169
\BOOKMARK [1][-]{section.12.5}{Dynamic Memory Allocation}{chapter.12}% 170
\BOOKMARK [2][-]{subsection.12.5.1}{Allocating and deallocating memory}{section.12.5}% 171
\BOOKMARK [1][-]{section.12.6}{Relationship between arrays and pointers}{chapter.12}% 172
\BOOKMARK [2][-]{subsection.12.6.1}{Subscript and offset notation equivalence}{section.12.6}% 173
\BOOKMARK [1][-]{section.12.7}{Pointer arithmetic}{chapter.12}% 174
\BOOKMARK [2][-]{subsection.12.7.1}{++ and \205}{section.12.7}% 175
\BOOKMARK [2][-]{subsection.12.7.2}{+ and -}{section.12.7}% 176
\BOOKMARK [2][-]{subsection.12.7.3}{Subtracting two pointers}{section.12.7}% 177
\BOOKMARK [2][-]{subsection.12.7.4}{Compare two pointers == and !=}{section.12.7}% 178
\BOOKMARK [2][-]{subsection.12.7.5}{Comparing the data pointers point to}{section.12.7}% 179
\BOOKMARK [2][-]{subsection.12.7.6}{Examples}{section.12.7}% 180
\BOOKMARK [1][-]{section.12.8}{Passing pointers to a function}{chapter.12}% 181
\BOOKMARK [1][-]{section.12.9}{Passing pointers to functions}{chapter.12}% 182
\BOOKMARK [1][-]{section.12.10}{Returning a pointer from a function}{chapter.12}% 183
\BOOKMARK [1][-]{section.12.11}{Potential pointer pitfalls}{chapter.12}% 184
\BOOKMARK [1][-]{section.12.12}{What is a reference?}{chapter.12}% 185
\BOOKMARK [2][-]{subsection.12.12.1}{Using references in range-based for loops}{section.12.12}% 186
\BOOKMARK [2][-]{subsection.12.12.2}{Examples}{section.12.12}% 187
\BOOKMARK [1][-]{section.12.13}{L-values and R-values}{chapter.12}% 188
\BOOKMARK [2][-]{subsection.12.13.1}{L-values}{section.12.13}% 189
\BOOKMARK [1][-]{section.12.14}{Using the debugger}{chapter.12}% 190
\BOOKMARK [1][-]{section.12.15}{Section recap}{chapter.12}% 191
