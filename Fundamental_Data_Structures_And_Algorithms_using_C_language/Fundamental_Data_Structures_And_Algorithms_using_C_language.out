\BOOKMARK [0][-]{chapter.1}{Recursion}{}% 1
\BOOKMARK [1][-]{section.1.1}{Introduction to recursion}{chapter.1}% 2
\BOOKMARK [1][-]{section.1.2}{Basic concept of recursion}{chapter.1}% 3
\BOOKMARK [1][-]{section.1.3}{When and how to terminate \204 the base condition of recursion}{chapter.1}% 4
\BOOKMARK [1][-]{section.1.4}{Let us go into the depth of the call}{chapter.1}% 5
\BOOKMARK [1][-]{section.1.5}{Recursion example \204 Juggler Sequence}{chapter.1}% 6
\BOOKMARK [1][-]{section.1.6}{Recursion example \204 Finding Factorial}{chapter.1}% 7
\BOOKMARK [1][-]{section.1.7}{Recursion example \204 Binary Search}{chapter.1}% 8
\BOOKMARK [1][-]{section.1.8}{Recursion example \204 Decimal to Binary}{chapter.1}% 9
\BOOKMARK [1][-]{section.1.9}{Calling a function \204 Operating system creates a stack}{chapter.1}% 10
\BOOKMARK [1][-]{section.1.10}{When there is no need for a stack}{chapter.1}% 11
\BOOKMARK [1][-]{section.1.11}{Tail recursion}{chapter.1}% 12
\BOOKMARK [1][-]{section.1.12}{Recursion versus iteration}{chapter.1}% 13
\BOOKMARK [2][-]{subsection.1.12.1}{When both are equivalent}{section.1.12}% 14
\BOOKMARK [2][-]{subsection.1.12.2}{When a loop is better}{section.1.12}% 15
\BOOKMARK [2][-]{subsection.1.12.3}{When recursion is better}{section.1.12}% 16
\BOOKMARK [2][-]{subsection.1.12.4}{Synthesis in a programmer's way}{section.1.12}% 17
